{"version":3,"sources":["../../src/parse-xlsx/horizontalStyle.js"],"names":["getJsonFromTable","table","valueAdapter","keyAdapter","headAdapter","id","undefined","key","head","value","out","keyLine","keyCount","i","length","arr","j"],"mappings":";;;;;qBAsBwBA,gB;;AAtBxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,gBAAT,CACbC,KADa,EAGb;AAAA,iFADgD,EAChD;AAAA,MADEC,YACF,QADEA,YACF;AAAA,MADgBC,UAChB,QADgBA,UAChB;AAAA,MAD4BC,WAC5B,QAD4BA,WAC5B;AAAA,MADyCC,EACzC,QADyCA,EACzC;;AACA,MAAIF,UAAU,KAAKG,SAAnB,EAA8BH,UAAU,GAAG,oBAACI,GAAD;AAAA,WAASA,GAAT;AAAA,GAAb;AAC9B,MAAIH,WAAW,KAAKE,SAApB,EAA+BF,WAAW,GAAG,qBAACI,IAAD;AAAA,WAAUA,IAAV;AAAA,GAAd;AAC/B,MAAIN,YAAY,KAAKI,SAArB,EACEJ,YAAY,GAAG,sBAACO,KAAD;AAAA,QAAUF,GAAV,SAAUA,GAAV;AAAA,QAAeC,IAAf,SAAeA,IAAf;AAAA,QAAqBH,EAArB,SAAqBA,EAArB;AAAA,WAA8BI,KAA9B;AAAA,GAAf;AACF,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,OAAO,GAAG,EAAhB,CANA,CAMmB;;AACnB,MAAMC,QAAQ,GAAG,EAAjB,CAPA,CAOoB;AACpB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAAK,CAAC,CAAD,CAAL,CAASa,MAA7B,EAAqC,EAAED,CAAvC;AACE,QAAIZ,KAAK,CAAC,CAAD,CAAL,CAASY,CAAT,MAAgB,EAApB,EAAwB;AACtB,UAAMN,GAAG,GAAGJ,UAAU,CAACF,KAAK,CAAC,CAAD,CAAL,CAASY,CAAT,CAAD,EAAcR,EAAd,CAAtB;AACA,UAAIE,GAAG,KAAKD,SAAZ,EAAuB;;AACvB,UAAIM,QAAQ,CAACL,GAAD,CAAR,KAAkBD,SAAtB,EAAiC;AAC/BM,QAAAA,QAAQ,CAACL,GAAD,CAAR,GAAgB,CAAhB;AACAI,QAAAA,OAAO,CAACE,CAAD,CAAP,GAAaN,GAAb;AACD,OAHD,MAGO;AACLI,QAAAA,OAAO,CAACE,CAAD,CAAP,GAAaN,GAAG,GAAG,EAAEK,QAAQ,CAACL,GAAD,CAA7B;AACD;AACF;AAVH;;AAWA,OAAK,IAAIM,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGZ,KAAK,CAACa,MAA1B,EAAkC,EAAED,EAApC,EAAuC;AACrC,QAAME,GAAG,GAAGd,KAAK,CAACY,EAAD,CAAjB,CADqC,CAChB;;AACrB,QAAML,IAAI,GAAGJ,WAAW,CAACW,GAAG,CAAC,CAAD,CAAJ,EAASV,EAAT,CAAxB;AACA,QAAIG,IAAI,KAAKF,SAAb,EAAwB;AACxBI,IAAAA,GAAG,CAACF,IAAD,CAAH,GAAY,EAAZ;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACD,MAAxB,EAAgC,EAAEE,CAAlC;AACE,UAAIL,OAAO,CAACK,CAAD,CAAP,KAAeV,SAAnB,EACEI,GAAG,CAACF,IAAD,CAAH,CAAUG,OAAO,CAACK,CAAD,CAAjB,IAAwBd,YAAY,CAACa,GAAG,CAACC,CAAD,CAAJ,EAAS;AAC3CR,QAAAA,IAAI,EAAJA,IAD2C;AAE3CD,QAAAA,GAAG,EAAEI,OAAO,CAACK,CAAD,CAF+B;AAG3CX,QAAAA,EAAE,EAAFA;AAH2C,OAAT,CAApC;AAFJ;AAOD;;AACD,SAAOK,GAAP;AACD","sourcesContent":["// Parse table horizontal style. Get json\n\n/*\n\n       |   A  |  B\n  Name | val1 | val2\n\n=>\n{\n  \"Name\": {\n    \"A\": \"val1\",\n    \"B\": \"val2\"\n  }\n}\n*/\n\n/**\n *\n * @param {*} table\n * @param {object} adapters\n * @returns\n */\nexport default function getJsonFromTable(\n  table,\n  { valueAdapter, keyAdapter, headAdapter, id } = {}\n) {\n  if (keyAdapter === undefined) keyAdapter = (key) => key\n  if (headAdapter === undefined) headAdapter = (head) => head\n  if (valueAdapter === undefined)\n    valueAdapter = (value, { key, head, id }) => value\n  const out = {}\n  const keyLine = {} // Map of key: linenumber - value: linekey\n  const keyCount = {} // Add a number if two lines have same name\n  // fill keyLine with keys\n  for (let i = 0; i < table[0].length; ++i)\n    if (table[0][i] !== '') {\n      const key = keyAdapter(table[0][i], id)\n      if (key === undefined) continue\n      if (keyCount[key] === undefined) {\n        keyCount[key] = 1\n        keyLine[i] = key\n      } else {\n        keyLine[i] = key + ++keyCount[key]\n      }\n    }\n  for (let i = 1; i < table.length; ++i) {\n    const arr = table[i] // column array of values\n    const head = headAdapter(arr[0], id)\n    if (head === undefined) continue\n    out[head] = {}\n    for (let j = 1; j < arr.length; ++j)\n      if (keyLine[j] !== undefined)\n        out[head][keyLine[j]] = valueAdapter(arr[j], {\n          head,\n          key: keyLine[j],\n          id,\n        })\n  }\n  return out\n}\n"],"file":"horizontalStyle.js"}