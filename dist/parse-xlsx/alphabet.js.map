{"version":3,"sources":["../../src/parse-xlsx/alphabet.js"],"names":["gen","alphabet","start","index","indexOf","alen","length","Math","floor","getAlphabetSerie"],"mappings":";;;;;;;;;;;;;;;yDA4BUA,G;;AA5BV,IAAMC,QAAQ,GAAG,CACf,GADe,EAEf,GAFe,EAGf,GAHe,EAIf,GAJe,EAKf,GALe,EAMf,GANe,EAOf,GAPe,EAQf,GARe,EASf,GATe,EAUf,GAVe,EAWf,GAXe,EAYf,GAZe,EAaf,GAbe,EAcf,GAde,EAef,GAfe,EAgBf,GAhBe,EAiBf,GAjBe,EAkBf,GAlBe,EAmBf,GAnBe,EAoBf,GApBe,EAqBf,GArBe,EAsBf,GAtBe,EAuBf,GAvBe,EAwBf,GAxBe,EAyBf,GAzBe,CAAjB;;AA4BA,SAAUD,GAAV,CAAcE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,UAAAA,KADN,GACcF,QAAQ,CAACG,OAAT,CAAiBF,KAAjB,CADd;AAEQG,UAAAA,IAFR,GAEeJ,QAAQ,CAACK,MAFxB;;AAAA;AAAA,eAGS,IAHT;AAAA;AAAA;AAAA;;AAAA,gBAIQH,KAAK,IAAIE,IAJjB;AAAA;AAAA;AAAA;;AAAA;AAKM,iBAAMJ,QAAQ,CAACM,IAAI,CAACC,KAAL,CAAWL,KAAK,GAAGE,IAAnB,IAA2B,CAA5B,CAAR,GAAyCJ,QAAQ,CAACE,KAAK,GAAGE,IAAT,CAAvD;;AALN;AAAA;AAAA;;AAAA;AAAA;AAMW,iBAAMJ,QAAQ,CAACE,KAAD,CAAd;;AANX;AAOIA,UAAAA,KAAK;AAPT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAASM,gBAAT,GAAuC;AAAA,MAAbP,KAAa,uEAAL,GAAK;AACrC,SAAOF,GAAG,CAACE,KAAD,CAAV;AACD;;QAEQO,gB,GAAAA,gB;QAAkBR,Q,GAAAA,Q","sourcesContent":["const alphabet = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'X',\n  'Y',\n  'Z',\n]\n\nfunction* gen(start) {\n  let index = alphabet.indexOf(start)\n  const alen = alphabet.length\n  while (true) {\n    if (index >= alen) {\n      yield alphabet[Math.floor(index / alen) - 1] + alphabet[index % alen]\n    } else yield alphabet[index]\n    index++\n  }\n}\n\nfunction getAlphabetSerie(start = 'A') {\n  return gen(start)\n}\n\nexport { getAlphabetSerie, alphabet }\n"],"file":"alphabet.js"}